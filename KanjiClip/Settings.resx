<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHyAAAAEAIAAoEAAAFgAAACgAAAAfAAAAQAAAAAEAIAAAAAAAgA8AACMuAAAjLgAAAAAAAAAA
        AADr6+sA4uLiFu3t7XLw8PCi8PDwpO/v76Tu7u6k7e7upO3t7qTu7u6k7u7upO7u7qTu7u+k7e3upOzs
        7aTs7e2k7e3tpO3t7aTt7e2k7e3tpO3t7aTt7e2k7u7upO7t7qTt7e2k7e3upO3t7qTu7u6k7u7ug+Xl
        5Sb///8A2dnZD/Dw8KH29/f89/f3//f39//29/f/9vb2//X29v/19vb/9fb2//X29v/19vb/9fb2//X2
        9v/19vb/9fb2//X29v/19vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//X29v/29vb/9vf3//f3
        9//z8/PC5eblJejp6VD19fX09/f3//f39//29/f/9vf3//b39//19vf/9fb3//X29//19vf/9fb3//X2
        9v/19vb/9fb2//X29v/19vb/9fb2//X29//19vf/9vb3//b29//19vb/9fb2//X29v/19vb/9fb3//b3
        9//3+Pj/9vf3/uzu7oXr7Oxy9fb2/vf39//39/j/9/f4//b39//29/f/9fb3//T29//09vf/9Pb3//T2
        9//09vb/9PX2//X29//19/f/9Pb2//X29//19vf/9fb3//X29//19vf/9fb2//X29v/39/j/9vf4//X2
        9//29/j/9vj5//X4+P/q7O2u6uvsdfX29v729/f/9vf3//b39//4+fn/9vf4//f5+v/2+Pn/9/n6//b4
        +f/2+Pn/9vj4/+Dh4f+AgYH/zs/Q//j6+v/09vb/9vf4//j6+v/3+fn/9vf4//j5+f/5+vr/uLm5/87P
        0P/5+/z/9Pj4//X4+f/09/j/6eztsenq63X09vb+9vf4//b3+P/z9PX/wsPE/+Xm5v++vr//vr6//6yt
        rf+5urv/wcLC/93d3v+/v7//goKC/39/f//HyMn/7u/w/9zd3v+jpKX/ubq7/9bX1/+5ubr/xsbH/3R0
        dP9ub2//wcPE//H19v/z+Pn/8/f4/+js7bHn6ep18/X2/vX3+P/29/j/7u/w/1tcXP+FhYX/Wlpa/2lp
        af9GR0b/VFRU/2BgYP+qqqr/Z2hn/6Wlpf9ubm7/YWJh/83Nzf9aWlr/bm5u/4mKif98fHz/cnJy/19g
        YP9oaGj/YmJi/1BRUf/Jzc7/9Pn7//L3+P/o7O2x5unqdfP19v719/j/9ff4/+7w8P9MTEz/ICAg/7W1
        tf+9vb3/T09P/15eXv9cXFz/c3Jz/1paWv+BgYH/a2tr/2FhYf+rq6v/TU1N//Hx8f//////h4eH/4uL
        jP9fX2D/aGho/3l5ef9QUFD/vsLD//X6/P/y9vj/5+vtsebp6nXy9vf+9Pf4//X3+P/t7/D/VVZW/1RV
        VP+FhYX/zc7O/4GCgv+7u7v/q6ur/4ODg/+urq7/nZ2d/5eXl/+Tk5P/x8fH/0ZGRv+ztLP/ycnJ/35+
        fv+Sk5L/k5OT/6+vr/+Ghob/lJWV/+vu7//z+Pn/8vf4/+fr7LHl6ep18vX3/vT3+P/09/j/7/Lz/46P
        kP/Gx8f/hoaH/93e3v/5+vr/9/j5//j5+f/5+fr/+/z8/8XFxf+fn6D/lpaW/+Tk5P+srKz/YGBg/4CA
        gP+JiYn/oKCg/5eXl//r7Oz/+fr6//f5+v/1+Pn/9Pj5//L2+P/m6uyx5ejqdfL29/70+Pn/9fj5//T3
        +f/z9vf/9ff4//T29//z9vb/9ff4//X3+P/2+Pj/9vj4//b3+P/09fb/8vT0//Lz8//19vf/9/n6//Lz
        9P/19vf/6+3t/+zu7//y9PT/9ff4//b4+f/2+fr/9fn6//X5+v/z9/j/5urrseXp6nXy9vf+9Pj6//T4
        +v/0+Pr/9vn7//j8/f/3+/z/9fn6//X4+v/1+Pr/9vn6//j6+//3+fr/9fj5//b4+f/2+Pn/9fj5//X4
        +f/1+Pn/8fT0//L19f/2+fr/9fj5//X4+v/1+fr/9fn6//X5+v/1+fr/8/f4/+fr7LHk6Ol18fb3/vT4
        +v/0+Pr/9fr7/+fr7P+rra//yMvM/+ru7//0+Pn/+Pv9/+ns7f+HiYr/zc/R//f6+//1+Pn/9fj5//X4
        +f/1+Pn/9/r7/5GTlP+mqKn/+Pv9//X4+v/1+fr/9fn6//X5+v/1+fv/9fn6//P3+P/m6uyx5ejqdfH2
        9/70+Pr/9Pn6//f8/f+Qk5T/PT4+/1JUVP9UVlb/X2Bg/2hpav9OT0//BQYG/3d5ef/4/P3/9/v8//f6
        +//1+Pn/9vr7//L29/9LTEz/goSF//n9/v/1+fr/9/z8//n9/v/3+/z/9fn6//X5+v/y9/j/5urrseTo
        6nXx9vf+9Pj6//T5+v/2+/z/bG5u/3Byc//p7e7/yczN/6SnqP+Ehof/VVZX/wAAAP9lZmf/8fX2/7a4
        uf/O0dL/9/v8/+bp6v/a3d7/U1RU/5SWl//9////9vr7/8zQ0f+ytrf/1dnb//T5+//0+fr/8vf4/+Xp
        67Hl6ep18fb3/vT5+v/0+fr/+P3+/4yPj/9WV1j/9Pn6//j8/f/5/f7//P///7m8vf8FBQX/aWtr//f7
        /P/BxMX/Wlxc/5aYmP+Mjo//QEFB/xwcHP9eYGD/q66u/6uvr/8hIiL/CgoK/4mLjP/0+fv/9Pn6//L3
        +P/l6uux5urrdfL29/70+Pr/9Pn6//j9/v+pra3/VldY/+zx8v/1+fr/+f3+//z///+9wMD/BgYG/2Zn
        Z//2+vv/+Pz9/9LV1v9NTk//c3V1/8TIyf87PD3/Pj8//11fX/8lJib/GBgY/4iKi//p7u//9fr8//T5
        +v/x9vj/5errsefr7HXy9vf+9Pj6//T5+v/3/P3/u7+//z0+P/90dnb/cHJy/4aIif+kpqf/kpSU/wUF
        Bf9vcHH/9/v8//X5+v/6/v7/19vb/0xNTv+bnp7/YGJi/62wsf90dnf/Q0RE/8HFxv/1+vv/9fr7//T5
        +v/z+fr/8fb4/+bq67Hn6ux18vb3/vT4+f/0+fr/9/v9/8LGx/9PUVH/ztLT/6yvsP9vcHH/Li8v/yAh
        If8AAAD/g4WG//j9/v/0+fr/0NTU/93h4v/M0NH/Tk9Q/zg5Of9tb2//ZGVm/97j5P/4/f7/9Pn6//T5
        +v/0+fr/8/j6//H29//m6uyx5unrdfL29/70+Pr/9Pj6//f7/f/Ex8n/Wltc/+/09f/4/f7/9vr7/+Dk
        5f+nqqv/CQkJ/3t9fv/4/f7/7PDx/2ZoaP9FRkf/fYCA/2BhYv8EBAT/Njc3/9PX2P/t8vP/5uvs//P4
        +f/0+fr/9Pn6//P5+v/x9vf/5errseXo6nXy9vf+8/j5//P4+v/2+/3/wsbH/1dYWf/w9fb/+P3+//f8
        /f/6////wcXG/wkJCf9aXFz/9Pn6//L3+P/i5+j/y8/Q/6Klpf9zdnb/IyQk/y8wMP9fYGH/QEFB/2Nk
        Zf/m6uv/9fr7//T5+v/0+Pr/8fb3/+Xq67Hk6Ol18vb3/vP4+v/0+Pr/9/z9/6SnqP8rLCz/enx8/52g
        of++wcL/3+Tl/7G0tf8JCQn/GBkZ/7K2t//2+/z/9fr7//b7/f/4/f7/+f3//2xubv97fn7/s7e3/6Cj
        pP/P09T/8/j5//T5+v/0+fr/8/n6//H2+P/m6uux5OjpdfH29/7z+Pr/9Pn6//T5+v/Gysv/ub2+/6Sn
        qP97fX7/W11d/1BRUv81Njb/DQ0N/z4/P/+9wcL/9vv8//T5+v/0+fr/9vv8/83R0v80NTX/bG5u//X6
        +//4/f7/9vv8//T5+v/0+fr/9Pn6//P5+v/x9/j/5uvsseTo6XXx9ff+8/j5//T5+v/z+fr/9vv8//f8
        /f/4/f7/9/v9/+/z9P/b3uD/vsLD/7u+v//l6er/9vv8//T5+v/0+fr/9Pn6//X6+//W2tv/qq2u/+Dk
        5f/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/z+Pr/8fb4/+Xq67Hk6Ol18fb3/vP4+v/0+Pr/9Pn6//T5
        +v/0+fr/9Pn6//T5+v/0+fr/9vr7//f7/f/3/P3/9fn6//T4+v/0+fr/9Pn6//T5+v/0+fr/9vv8//j9
        /v/1+vv/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/8/j6//H3+P/l6uux5OjpdfH29/7z+Pr/9Pn6//T5
        +v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+Pr/9Pj5//T4+f/0+Pr/9Pn6//T5+v/0+fr/9Pn6//T5
        +v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//P4+v/y9/j/5ersseXp6nXx9vf+8/j6//T5
        +v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pj6//T4+f/0+Pn/9Pj6//T4+v/0+Pr/9Pn6//T5
        +v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/8vf4/+bq7LHl6ep18PX3/vL4
        +f/z+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+Pr/9Pj6//T4+v/0+Pr/9Pj6//T5
        +v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/8/j6//L3+f/m6+yx5erscvD1
        9/7y9/n/8/j6//P5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T4+v/0+Pr/9Pj6//T4
        +v/0+Pr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//T5+v/0+fr/9Pn6//P4+f/y9/n/5+vtruTq
        61Dw9ff08ff4//L3+f/y+Pn/8vj5//L4+f/y+Pn/8vj5//P4+f/z+Pn/8/j6//P4+f/z+Pn/8vj5//L4
        +f/y+Pn/8/j5//P4+f/z+Pn/8/j5//P4+f/z+Pn/8vj5//L4+f/z+Pn/8/j5//P4+f/y9/j/8ff4/urv
        8ITV2tsO7fLzoPL3+Pzy9/j/8fb4//H29//w9vf/8PX3//D19//w9vf/8fb3//H29//x9vf/8Pb3//D1
        9//w9fb/8PX2//H19//x9ff/8PX2//D19//w9ff/8PX3//D19//x9vf/8fb3//H2+P/y9/j/8vf4/+/z
        9L/i5+cj5urqAODj5Bbq7e5z7/PzovD09aTu8vOk7fLzpO3y86Tt8vOk7fLzpO3x86Tt8fKk7PHypOzw
        8qTs8PGk6+/wpOvu76Tr7u+k6+7vpOvu76Tr7u+k6u7vpOru76Tq7u+k6+7vpOru76Tq7u+k6+/wo+vv
        8IDk5+gj+f//AIAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAAC
</value>
  </data>
</root>